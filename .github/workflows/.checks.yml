name: Checks

on:
  workflow_call:

permissions:
  contents: read
  actions: write

env:
  CI: "true"
  RUST_BACKTRACE: "1"
  CARGO_TERM_COLOR: "always"

x-steps:
  restore_checks_cache: &restore_checks_cache
    - name: Prepare cache dirs
      run: mkdir -p .cache/cargo .cache/target
    - name: Restore checks-cache
      uses: actions/cache@v4
      with:
        path: |
          .cache/cargo
          .cache/target
        key: checks-cache-${{ runner.os }}-rust-1.90-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          checks-cache-${{ runner.os }}-rust-1.90-


jobs:
  fmt:
    name: fmt
    runs-on: ${{ vars.RUNS_ON }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - *restore_checks_cache
      - name: Invoke
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: cargo/fmt

  clippy:
    name: clippy
    runs-on: ${{ vars.RUNS_ON }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - *restore_checks_cache
      - name: Invoke
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: cargo/clippy

  test:
    name: test
    runs-on: ${{ vars.RUNS_ON }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - *restore_checks_cache
      - name: Invoke
        uses: Mad-Pixels/github-workflows/actions/taskfile-runner@v1
        with:
          command: cargo/test
